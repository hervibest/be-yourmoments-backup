// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.12
// source: pb/photo/photo.proto

package photopb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string                  `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatorId      string                  `protobuf:"bytes,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Title          string                  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	OwnedByUserId  string                  `protobuf:"bytes,5,opt,name=owned_by_user_id,json=ownedByUserId,proto3" json:"owned_by_user_id,omitempty"`
	CompressedUrl  string                  `protobuf:"bytes,6,opt,name=compressed_url,json=compressedUrl,proto3" json:"compressed_url,omitempty"`
	IsThisYouUrl   string                  `protobuf:"bytes,7,opt,name=is_this_you_url,json=isThisYouUrl,proto3" json:"is_this_you_url,omitempty"`
	YourMomentsUrl string                  `protobuf:"bytes,8,opt,name=your_moments_url,json=yourMomentsUrl,proto3" json:"your_moments_url,omitempty"`
	CollectionUrl  string                  `protobuf:"bytes,9,opt,name=collection_url,json=collectionUrl,proto3" json:"collection_url,omitempty"`
	Price          int32                   `protobuf:"varint,10,opt,name=price,proto3" json:"price,omitempty"`
	PriceStr       string                  `protobuf:"bytes,11,opt,name=price_str,json=priceStr,proto3" json:"price_str,omitempty"`
	OriginalAt     *timestamppb.Timestamp  `protobuf:"bytes,12,opt,name=original_at,json=originalAt,proto3" json:"original_at,omitempty"`
	CreatedAt      *timestamppb.Timestamp  `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp  `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Detail         *PhotoDetail            `protobuf:"bytes,15,opt,name=detail,proto3" json:"detail,omitempty"`
	Latitude       *wrapperspb.DoubleValue `protobuf:"bytes,64,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude      *wrapperspb.DoubleValue `protobuf:"bytes,65,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Description    *wrapperspb.StringValue `protobuf:"bytes,66,opt,name=description,proto3" json:"description,omitempty"`
	BulkPhotoId    *wrapperspb.StringValue `protobuf:"bytes,80,opt,name=bulk_photo_id,json=bulkPhotoId,proto3" json:"bulk_photo_id,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{0}
}

func (x *Photo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Photo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Photo) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Photo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Photo) GetOwnedByUserId() string {
	if x != nil {
		return x.OwnedByUserId
	}
	return ""
}

func (x *Photo) GetCompressedUrl() string {
	if x != nil {
		return x.CompressedUrl
	}
	return ""
}

func (x *Photo) GetIsThisYouUrl() string {
	if x != nil {
		return x.IsThisYouUrl
	}
	return ""
}

func (x *Photo) GetYourMomentsUrl() string {
	if x != nil {
		return x.YourMomentsUrl
	}
	return ""
}

func (x *Photo) GetCollectionUrl() string {
	if x != nil {
		return x.CollectionUrl
	}
	return ""
}

func (x *Photo) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Photo) GetPriceStr() string {
	if x != nil {
		return x.PriceStr
	}
	return ""
}

func (x *Photo) GetOriginalAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalAt
	}
	return nil
}

func (x *Photo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Photo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Photo) GetDetail() *PhotoDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *Photo) GetLatitude() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Latitude
	}
	return nil
}

func (x *Photo) GetLongitude() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Longitude
	}
	return nil
}

func (x *Photo) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Photo) GetBulkPhotoId() *wrapperspb.StringValue {
	if x != nil {
		return x.BulkPhotoId
	}
	return nil
}

type PhotoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoId         string                 `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	FileName        string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileKey         string                 `protobuf:"bytes,4,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	Size            int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Type            string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Checksum        string                 `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Width           int32                  `protobuf:"varint,8,opt,name=width,proto3" json:"width,omitempty"` // int8 di Go, gunakan int32 di proto karena tidak ada int8
	Height          int32                  `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Url             string                 `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	YourMomentsType string                 `protobuf:"bytes,11,opt,name=your_moments_type,json=yourMomentsType,proto3" json:"your_moments_type,omitempty"` // Enum nanti bisa kita define kalau perlu
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PhotoDetail) Reset() {
	*x = PhotoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoDetail) ProtoMessage() {}

func (x *PhotoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoDetail.ProtoReflect.Descriptor instead.
func (*PhotoDetail) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{1}
}

func (x *PhotoDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PhotoDetail) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *PhotoDetail) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *PhotoDetail) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *PhotoDetail) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PhotoDetail) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhotoDetail) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *PhotoDetail) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *PhotoDetail) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *PhotoDetail) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PhotoDetail) GetYourMomentsType() string {
	if x != nil {
		return x.YourMomentsType
	}
	return ""
}

func (x *PhotoDetail) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PhotoDetail) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoRequest) Reset() {
	*x = CreatePhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoRequest) ProtoMessage() {}

func (x *CreatePhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoRequest.ProtoReflect.Descriptor instead.
func (*CreatePhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePhotoRequest) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type CreatePhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreatePhotoResponse) Reset() {
	*x = CreatePhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoResponse) ProtoMessage() {}

func (x *CreatePhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoResponse.ProtoReflect.Descriptor instead.
func (*CreatePhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreatePhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdatePhotoDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoDetail *PhotoDetail `protobuf:"bytes,1,opt,name=photoDetail,proto3" json:"photoDetail,omitempty"`
}

func (x *UpdatePhotoDetailRequest) Reset() {
	*x = UpdatePhotoDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoDetailRequest) ProtoMessage() {}

func (x *UpdatePhotoDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoDetailRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhotoDetailRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePhotoDetailRequest) GetPhotoDetail() *PhotoDetail {
	if x != nil {
		return x.PhotoDetail
	}
	return nil
}

type UpdatePhotoDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdatePhotoDetailResponse) Reset() {
	*x = UpdatePhotoDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoDetailResponse) ProtoMessage() {}

func (x *UpdatePhotoDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoDetailResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhotoDetailResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePhotoDetailResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePhotoDetailResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdatePhotographerPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId []string `protobuf:"bytes,2,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Gunakan repeated untuk array
}

func (x *UpdatePhotographerPhotoRequest) Reset() {
	*x = UpdatePhotographerPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotographerPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotographerPhotoRequest) ProtoMessage() {}

func (x *UpdatePhotographerPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotographerPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhotographerPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePhotographerPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePhotographerPhotoRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type UpdatePhotographerPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdatePhotographerPhotoResponse) Reset() {
	*x = UpdatePhotographerPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotographerPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotographerPhotoResponse) ProtoMessage() {}

func (x *UpdatePhotographerPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotographerPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdatePhotographerPhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePhotographerPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdatePhotographerPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UpdateFaceRecogPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PhotoId []string `protobuf:"bytes,2,rep,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"` // Gunakan repeated untuk array
}

func (x *UpdateFaceRecogPhotoRequest) Reset() {
	*x = UpdateFaceRecogPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFaceRecogPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFaceRecogPhotoRequest) ProtoMessage() {}

func (x *UpdateFaceRecogPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFaceRecogPhotoRequest.ProtoReflect.Descriptor instead.
func (*UpdateFaceRecogPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateFaceRecogPhotoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFaceRecogPhotoRequest) GetPhotoId() []string {
	if x != nil {
		return x.PhotoId
	}
	return nil
}

type UpdateFaceRecogPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateFaceRecogPhotoResponse) Reset() {
	*x = UpdateFaceRecogPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFaceRecogPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFaceRecogPhotoResponse) ProtoMessage() {}

func (x *UpdateFaceRecogPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFaceRecogPhotoResponse.ProtoReflect.Descriptor instead.
func (*UpdateFaceRecogPhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateFaceRecogPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateFaceRecogPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UserSimilarPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                    // ID unik (jika diperlukan dari client)
	PhotoId    string                 `protobuf:"bytes,2,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`           // ID foto
	UserId     string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`              // ID user
	Similarity uint32                 `protobuf:"varint,4,opt,name=similarity,proto3" json:"similarity,omitempty"`                   // Level kemiripan
	IsWishlist bool                   `protobuf:"varint,5,opt,name=is_wishlist,json=isWishlist,proto3" json:"is_wishlist,omitempty"` // Flag wishlist
	IsResend   bool                   `protobuf:"varint,6,opt,name=is_resend,json=isResend,proto3" json:"is_resend,omitempty"`       // Flag resend
	IsCart     bool                   `protobuf:"varint,7,opt,name=is_cart,json=isCart,proto3" json:"is_cart,omitempty"`             // Flag cart
	IsFavorite bool                   `protobuf:"varint,8,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"` // Flag favorite
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`     // Waktu pembuatan
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`    // Waktu pembaruan
}

func (x *UserSimilarPhoto) Reset() {
	*x = UserSimilarPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSimilarPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSimilarPhoto) ProtoMessage() {}

func (x *UserSimilarPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSimilarPhoto.ProtoReflect.Descriptor instead.
func (*UserSimilarPhoto) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{10}
}

func (x *UserSimilarPhoto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSimilarPhoto) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *UserSimilarPhoto) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSimilarPhoto) GetSimilarity() uint32 {
	if x != nil {
		return x.Similarity
	}
	return 0
}

func (x *UserSimilarPhoto) GetIsWishlist() bool {
	if x != nil {
		return x.IsWishlist
	}
	return false
}

func (x *UserSimilarPhoto) GetIsResend() bool {
	if x != nil {
		return x.IsResend
	}
	return false
}

func (x *UserSimilarPhoto) GetIsCart() bool {
	if x != nil {
		return x.IsCart
	}
	return false
}

func (x *UserSimilarPhoto) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *UserSimilarPhoto) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserSimilarPhoto) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateUserSimilarPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoDetail      *PhotoDetail        `protobuf:"bytes,1,opt,name=photoDetail,proto3" json:"photoDetail,omitempty"`
	UserSimilarPhoto []*UserSimilarPhoto `protobuf:"bytes,2,rep,name=user_similar_photo,json=userSimilarPhoto,proto3" json:"user_similar_photo,omitempty"`
}

func (x *CreateUserSimilarPhotoRequest) Reset() {
	*x = CreateUserSimilarPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarPhotoRequest) ProtoMessage() {}

func (x *CreateUserSimilarPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarPhotoRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{11}
}

func (x *CreateUserSimilarPhotoRequest) GetPhotoDetail() *PhotoDetail {
	if x != nil {
		return x.PhotoDetail
	}
	return nil
}

func (x *CreateUserSimilarPhotoRequest) GetUserSimilarPhoto() []*UserSimilarPhoto {
	if x != nil {
		return x.UserSimilarPhoto
	}
	return nil
}

type CreateUserSimilarPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateUserSimilarPhotoResponse) Reset() {
	*x = CreateUserSimilarPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarPhotoResponse) ProtoMessage() {}

func (x *CreateUserSimilarPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarPhotoResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarPhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{12}
}

func (x *CreateUserSimilarPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserSimilarPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Facecam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileName    string                 `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileKey     string                 `protobuf:"bytes,4,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`
	Title       string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Size        int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Checksum    string                 `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Url         string                 `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	IsProcessed bool                   `protobuf:"varint,9,opt,name=is_processed,json=isProcessed,proto3" json:"is_processed,omitempty"`
	OriginalAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=original_at,json=originalAt,proto3" json:"original_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Facecam) Reset() {
	*x = Facecam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Facecam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facecam) ProtoMessage() {}

func (x *Facecam) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facecam.ProtoReflect.Descriptor instead.
func (*Facecam) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{13}
}

func (x *Facecam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Facecam) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Facecam) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Facecam) GetFileKey() string {
	if x != nil {
		return x.FileKey
	}
	return ""
}

func (x *Facecam) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Facecam) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Facecam) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Facecam) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Facecam) GetIsProcessed() bool {
	if x != nil {
		return x.IsProcessed
	}
	return false
}

func (x *Facecam) GetOriginalAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OriginalAt
	}
	return nil
}

func (x *Facecam) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Facecam) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateFacecamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facecam *Facecam `protobuf:"bytes,1,opt,name=facecam,proto3" json:"facecam,omitempty"`
}

func (x *CreateFacecamRequest) Reset() {
	*x = CreateFacecamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacecamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacecamRequest) ProtoMessage() {}

func (x *CreateFacecamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacecamRequest.ProtoReflect.Descriptor instead.
func (*CreateFacecamRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{14}
}

func (x *CreateFacecamRequest) GetFacecam() *Facecam {
	if x != nil {
		return x.Facecam
	}
	return nil
}

type CreateFacecamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateFacecamResponse) Reset() {
	*x = CreateFacecamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFacecamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFacecamResponse) ProtoMessage() {}

func (x *CreateFacecamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFacecamResponse.ProtoReflect.Descriptor instead.
func (*CreateFacecamResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{15}
}

func (x *CreateFacecamResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateFacecamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateUserSimilarFacecamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facecam          *Facecam            `protobuf:"bytes,1,opt,name=facecam,proto3" json:"facecam,omitempty"`
	UserSimilarPhoto []*UserSimilarPhoto `protobuf:"bytes,2,rep,name=user_similar_photo,json=userSimilarPhoto,proto3" json:"user_similar_photo,omitempty"`
}

func (x *CreateUserSimilarFacecamRequest) Reset() {
	*x = CreateUserSimilarFacecamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarFacecamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarFacecamRequest) ProtoMessage() {}

func (x *CreateUserSimilarFacecamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarFacecamRequest.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarFacecamRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{16}
}

func (x *CreateUserSimilarFacecamRequest) GetFacecam() *Facecam {
	if x != nil {
		return x.Facecam
	}
	return nil
}

func (x *CreateUserSimilarFacecamRequest) GetUserSimilarPhoto() []*UserSimilarPhoto {
	if x != nil {
		return x.UserSimilarPhoto
	}
	return nil
}

type CreateUserSimilarFacecamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateUserSimilarFacecamResponse) Reset() {
	*x = CreateUserSimilarFacecamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserSimilarFacecamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserSimilarFacecamResponse) ProtoMessage() {}

func (x *CreateUserSimilarFacecamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserSimilarFacecamResponse.ProtoReflect.Descriptor instead.
func (*CreateUserSimilarFacecamResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{17}
}

func (x *CreateUserSimilarFacecamResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateUserSimilarFacecamResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Creator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Rating      float32                `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`
	RatingCount int32                  `protobuf:"varint,4,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`
	VerifiedAt  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Creator) Reset() {
	*x = Creator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Creator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Creator) ProtoMessage() {}

func (x *Creator) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Creator.ProtoReflect.Descriptor instead.
func (*Creator) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{18}
}

func (x *Creator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Creator) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Creator) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Creator) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *Creator) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

func (x *Creator) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Creator) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateCreatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateCreatorRequest) Reset() {
	*x = CreateCreatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreatorRequest) ProtoMessage() {}

func (x *CreateCreatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreatorRequest.ProtoReflect.Descriptor instead.
func (*CreateCreatorRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{19}
}

func (x *CreateCreatorRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreateCreatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Creator *Creator `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Error   string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateCreatorResponse) Reset() {
	*x = CreateCreatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCreatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCreatorResponse) ProtoMessage() {}

func (x *CreateCreatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCreatorResponse.ProtoReflect.Descriptor instead.
func (*CreateCreatorResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{20}
}

func (x *CreateCreatorResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateCreatorResponse) GetCreator() *Creator {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *CreateCreatorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetCreatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetCreatorRequest) Reset() {
	*x = GetCreatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorRequest) ProtoMessage() {}

func (x *GetCreatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorRequest.ProtoReflect.Descriptor instead.
func (*GetCreatorRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{21}
}

func (x *GetCreatorRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetCreatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Creator *Creator `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	Error   string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetCreatorResponse) Reset() {
	*x = GetCreatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCreatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorResponse) ProtoMessage() {}

func (x *GetCreatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorResponse.ProtoReflect.Descriptor instead.
func (*GetCreatorResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{22}
}

func (x *GetCreatorResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCreatorResponse) GetCreator() *Creator {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *GetCreatorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CheckoutItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoId             string `protobuf:"bytes,1,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
	CreatorId           string `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Title               string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	YourMomentsUrl      string `protobuf:"bytes,4,opt,name=your_moments_url,json=yourMomentsUrl,proto3" json:"your_moments_url,omitempty"`
	Price               int32  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Discount            int32  `protobuf:"varint,6,opt,name=discount,proto3" json:"discount,omitempty"`
	DiscountId          string `protobuf:"bytes,7,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	DiscountType        string `protobuf:"bytes,8,opt,name=discount_type,json=discountType,proto3" json:"discount_type,omitempty"`
	DiscountMinQuantity int32  `protobuf:"varint,9,opt,name=discount_min_quantity,json=discountMinQuantity,proto3" json:"discount_min_quantity,omitempty"`
	DiscountValue       int32  `protobuf:"varint,10,opt,name=discount_value,json=discountValue,proto3" json:"discount_value,omitempty"`
	FinalPrice          int32  `protobuf:"varint,11,opt,name=final_price,json=finalPrice,proto3" json:"final_price,omitempty"`
}

func (x *CheckoutItem) Reset() {
	*x = CheckoutItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutItem) ProtoMessage() {}

func (x *CheckoutItem) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutItem.ProtoReflect.Descriptor instead.
func (*CheckoutItem) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{23}
}

func (x *CheckoutItem) GetPhotoId() string {
	if x != nil {
		return x.PhotoId
	}
	return ""
}

func (x *CheckoutItem) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CheckoutItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CheckoutItem) GetYourMomentsUrl() string {
	if x != nil {
		return x.YourMomentsUrl
	}
	return ""
}

func (x *CheckoutItem) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CheckoutItem) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *CheckoutItem) GetDiscountId() string {
	if x != nil {
		return x.DiscountId
	}
	return ""
}

func (x *CheckoutItem) GetDiscountType() string {
	if x != nil {
		return x.DiscountType
	}
	return ""
}

func (x *CheckoutItem) GetDiscountMinQuantity() int32 {
	if x != nil {
		return x.DiscountMinQuantity
	}
	return 0
}

func (x *CheckoutItem) GetDiscountValue() int32 {
	if x != nil {
		return x.DiscountValue
	}
	return 0
}

func (x *CheckoutItem) GetFinalPrice() int32 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    int32 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	Discount int32 `protobuf:"varint,2,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{24}
}

func (x *Total) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Total) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

type CalculatePhotoPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PhotoIds []string `protobuf:"bytes,2,rep,name=photo_ids,json=photoIds,proto3" json:"photo_ids,omitempty"`
}

func (x *CalculatePhotoPriceRequest) Reset() {
	*x = CalculatePhotoPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePhotoPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePhotoPriceRequest) ProtoMessage() {}

func (x *CalculatePhotoPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePhotoPriceRequest.ProtoReflect.Descriptor instead.
func (*CalculatePhotoPriceRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{25}
}

func (x *CalculatePhotoPriceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CalculatePhotoPriceRequest) GetPhotoIds() []string {
	if x != nil {
		return x.PhotoIds
	}
	return nil
}

type CalculatePhotoPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64           `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Items  []*CheckoutItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total  *Total          `protobuf:"bytes,3,opt,name=total,proto3" json:"total,omitempty"`
	Error  string          `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalculatePhotoPriceResponse) Reset() {
	*x = CalculatePhotoPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePhotoPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePhotoPriceResponse) ProtoMessage() {}

func (x *CalculatePhotoPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePhotoPriceResponse.ProtoReflect.Descriptor instead.
func (*CalculatePhotoPriceResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{26}
}

func (x *CalculatePhotoPriceResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CalculatePhotoPriceResponse) GetItems() []*CheckoutItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CalculatePhotoPriceResponse) GetTotal() *Total {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *CalculatePhotoPriceResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type OwnerOwnPhotosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId  string   `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	PhotoIds []string `protobuf:"bytes,2,rep,name=photo_ids,json=photoIds,proto3" json:"photo_ids,omitempty"`
}

func (x *OwnerOwnPhotosRequest) Reset() {
	*x = OwnerOwnPhotosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerOwnPhotosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerOwnPhotosRequest) ProtoMessage() {}

func (x *OwnerOwnPhotosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerOwnPhotosRequest.ProtoReflect.Descriptor instead.
func (*OwnerOwnPhotosRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{27}
}

func (x *OwnerOwnPhotosRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *OwnerOwnPhotosRequest) GetPhotoIds() []string {
	if x != nil {
		return x.PhotoIds
	}
	return nil
}

type OwnerOwnPhotosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OwnerOwnPhotosResponse) Reset() {
	*x = OwnerOwnPhotosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnerOwnPhotosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerOwnPhotosResponse) ProtoMessage() {}

func (x *OwnerOwnPhotosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerOwnPhotosResponse.ProtoReflect.Descriptor instead.
func (*OwnerOwnPhotosResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{28}
}

func (x *OwnerOwnPhotosResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OwnerOwnPhotosResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BulkPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId       string                 `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	BulkPhotoStatus string                 `protobuf:"bytes,3,opt,name=bulk_photo_status,json=bulkPhotoStatus,proto3" json:"bulk_photo_status,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *BulkPhoto) Reset() {
	*x = BulkPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkPhoto) ProtoMessage() {}

func (x *BulkPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkPhoto.ProtoReflect.Descriptor instead.
func (*BulkPhoto) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{29}
}

func (x *BulkPhoto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BulkPhoto) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *BulkPhoto) GetBulkPhotoStatus() string {
	if x != nil {
		return x.BulkPhotoStatus
	}
	return ""
}

func (x *BulkPhoto) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BulkPhoto) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateBulkPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BulkPhoto *BulkPhoto `protobuf:"bytes,1,opt,name=bulk_photo,json=bulkPhoto,proto3" json:"bulk_photo,omitempty"`
	Photos    []*Photo   `protobuf:"bytes,2,rep,name=photos,proto3" json:"photos,omitempty"`
}

func (x *CreateBulkPhotoRequest) Reset() {
	*x = CreateBulkPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPhotoRequest) ProtoMessage() {}

func (x *CreateBulkPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPhotoRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{30}
}

func (x *CreateBulkPhotoRequest) GetBulkPhoto() *BulkPhoto {
	if x != nil {
		return x.BulkPhoto
	}
	return nil
}

func (x *CreateBulkPhotoRequest) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

type CreateBulkPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateBulkPhotoResponse) Reset() {
	*x = CreateBulkPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkPhotoResponse) ProtoMessage() {}

func (x *CreateBulkPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkPhotoResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkPhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{31}
}

func (x *CreateBulkPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateBulkPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type BulkUserSimilarPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoDetail      *PhotoDetail        `protobuf:"bytes,1,opt,name=photoDetail,proto3" json:"photoDetail,omitempty"`
	UserSimilarPhoto []*UserSimilarPhoto `protobuf:"bytes,2,rep,name=user_similar_photo,json=userSimilarPhoto,proto3" json:"user_similar_photo,omitempty"`
}

func (x *BulkUserSimilarPhoto) Reset() {
	*x = BulkUserSimilarPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkUserSimilarPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUserSimilarPhoto) ProtoMessage() {}

func (x *BulkUserSimilarPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUserSimilarPhoto.ProtoReflect.Descriptor instead.
func (*BulkUserSimilarPhoto) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{32}
}

func (x *BulkUserSimilarPhoto) GetPhotoDetail() *PhotoDetail {
	if x != nil {
		return x.PhotoDetail
	}
	return nil
}

func (x *BulkUserSimilarPhoto) GetUserSimilarPhoto() []*UserSimilarPhoto {
	if x != nil {
		return x.UserSimilarPhoto
	}
	return nil
}

type CreateBulkUserSimilarPhotoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BulkPhoto            *BulkPhoto              `protobuf:"bytes,1,opt,name=bulk_photo,json=bulkPhoto,proto3" json:"bulk_photo,omitempty"`
	BulkUserSimilarPhoto []*BulkUserSimilarPhoto `protobuf:"bytes,2,rep,name=bulk_user_similar_photo,json=bulkUserSimilarPhoto,proto3" json:"bulk_user_similar_photo,omitempty"`
}

func (x *CreateBulkUserSimilarPhotoRequest) Reset() {
	*x = CreateBulkUserSimilarPhotoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkUserSimilarPhotoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkUserSimilarPhotoRequest) ProtoMessage() {}

func (x *CreateBulkUserSimilarPhotoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkUserSimilarPhotoRequest.ProtoReflect.Descriptor instead.
func (*CreateBulkUserSimilarPhotoRequest) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{33}
}

func (x *CreateBulkUserSimilarPhotoRequest) GetBulkPhoto() *BulkPhoto {
	if x != nil {
		return x.BulkPhoto
	}
	return nil
}

func (x *CreateBulkUserSimilarPhotoRequest) GetBulkUserSimilarPhoto() []*BulkUserSimilarPhoto {
	if x != nil {
		return x.BulkUserSimilarPhoto
	}
	return nil
}

type CreateBulkUserSimilarPhotoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CreateBulkUserSimilarPhotoResponse) Reset() {
	*x = CreateBulkUserSimilarPhotoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBulkUserSimilarPhotoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBulkUserSimilarPhotoResponse) ProtoMessage() {}

func (x *CreateBulkUserSimilarPhotoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBulkUserSimilarPhotoResponse.ProtoReflect.Descriptor instead.
func (*CreateBulkUserSimilarPhotoResponse) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{34}
}

func (x *CreateBulkUserSimilarPhotoResponse) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateBulkUserSimilarPhotoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CountMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountMap map[string]int32 `protobuf:"bytes,1,rep,name=count_map,json=countMap,proto3" json:"count_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *CountMap) Reset() {
	*x = CountMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_photo_photo_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMap) ProtoMessage() {}

func (x *CountMap) ProtoReflect() protoreflect.Message {
	mi := &file_pb_photo_photo_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMap.ProtoReflect.Descriptor instead.
func (*CountMap) Descriptor() ([]byte, []int) {
	return file_pb_photo_photo_proto_rawDescGZIP(), []int{35}
}

func (x *CountMap) GetCountMap() map[string]int32 {
	if x != nil {
		return x.CountMap
	}
	return nil
}

var File_pb_photo_photo_proto protoreflect.FileDescriptor

var file_pb_photo_photo_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x62, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7,
	0x06, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x74, 0x68, 0x69,
	0x73, 0x5f, 0x79, 0x6f, 0x75, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x73, 0x54, 0x68, 0x69, 0x73, 0x59, 0x6f, 0x75, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a,
	0x10, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x79, 0x6f, 0x75, 0x72, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74,
	0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x38, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x40, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x62, 0x75, 0x6c,
	0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x22, 0x96, 0x03, 0x0a, 0x0b, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x79, 0x6f, 0x75, 0x72,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x50, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x49, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x49, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x48, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xe4, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63,
	0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x45, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x98, 0x03, 0x0a, 0x07, 0x46, 0x61, 0x63, 0x65,
	0x63, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12,
	0x3b, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x40, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65,
	0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x61,
	0x63, 0x65, 0x63, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x07, 0x66, 0x61, 0x63,
	0x65, 0x63, 0x61, 0x6d, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x1f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d,
	0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x12, 0x45, 0x0a, 0x12, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x22, 0x50, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xa0, 0x02, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xfc, 0x02, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x79, 0x6f, 0x75, 0x72, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x69, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x39, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a,
	0x1a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64,
	0x73, 0x22, 0x9a, 0x01, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4f,
	0x0a, 0x15, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x64, 0x73, 0x22,
	0x46, 0x0a, 0x16, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x42, 0x75, 0x6c, 0x6b,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c,
	0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x47, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x93, 0x01, 0x0a, 0x14, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d,
	0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x0a, 0x0b, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x45, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61,
	0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a,
	0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x52, 0x0a,
	0x17, 0x62, 0x75, 0x6c, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x14, 0x62, 0x75, 0x6c,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x22, 0x52, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x61, 0x70, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x3b,
	0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x94, 0x09, 0x0a, 0x0c,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x25, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x22,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x67, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a,
	0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c,
	0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x12, 0x26, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x46, 0x61, 0x63, 0x65, 0x63,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x12, 0x1b, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63, 0x65, 0x63, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x12, 0x24, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69,
	0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x1b, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x2e, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x0e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12,
	0x1c, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x77, 0x6e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12,
	0x1d, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x6c, 0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c,
	0x6b, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x28, 0x2e,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x6c, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x65, 0x72, 0x76, 0x69, 0x62, 0x65, 0x73, 0x74, 0x2f, 0x62, 0x65, 0x2d, 0x79, 0x6f,
	0x75, 0x72, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x2f, 0x70, 0x62, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_photo_photo_proto_rawDescOnce sync.Once
	file_pb_photo_photo_proto_rawDescData = file_pb_photo_photo_proto_rawDesc
)

func file_pb_photo_photo_proto_rawDescGZIP() []byte {
	file_pb_photo_photo_proto_rawDescOnce.Do(func() {
		file_pb_photo_photo_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_photo_photo_proto_rawDescData)
	})
	return file_pb_photo_photo_proto_rawDescData
}

var file_pb_photo_photo_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_pb_photo_photo_proto_goTypes = []interface{}{
	(*Photo)(nil),                              // 0: photo.Photo
	(*PhotoDetail)(nil),                        // 1: photo.PhotoDetail
	(*CreatePhotoRequest)(nil),                 // 2: photo.CreatePhotoRequest
	(*CreatePhotoResponse)(nil),                // 3: photo.CreatePhotoResponse
	(*UpdatePhotoDetailRequest)(nil),           // 4: photo.UpdatePhotoDetailRequest
	(*UpdatePhotoDetailResponse)(nil),          // 5: photo.UpdatePhotoDetailResponse
	(*UpdatePhotographerPhotoRequest)(nil),     // 6: photo.UpdatePhotographerPhotoRequest
	(*UpdatePhotographerPhotoResponse)(nil),    // 7: photo.UpdatePhotographerPhotoResponse
	(*UpdateFaceRecogPhotoRequest)(nil),        // 8: photo.UpdateFaceRecogPhotoRequest
	(*UpdateFaceRecogPhotoResponse)(nil),       // 9: photo.UpdateFaceRecogPhotoResponse
	(*UserSimilarPhoto)(nil),                   // 10: photo.UserSimilarPhoto
	(*CreateUserSimilarPhotoRequest)(nil),      // 11: photo.CreateUserSimilarPhotoRequest
	(*CreateUserSimilarPhotoResponse)(nil),     // 12: photo.CreateUserSimilarPhotoResponse
	(*Facecam)(nil),                            // 13: photo.Facecam
	(*CreateFacecamRequest)(nil),               // 14: photo.CreateFacecamRequest
	(*CreateFacecamResponse)(nil),              // 15: photo.CreateFacecamResponse
	(*CreateUserSimilarFacecamRequest)(nil),    // 16: photo.CreateUserSimilarFacecamRequest
	(*CreateUserSimilarFacecamResponse)(nil),   // 17: photo.CreateUserSimilarFacecamResponse
	(*Creator)(nil),                            // 18: photo.Creator
	(*CreateCreatorRequest)(nil),               // 19: photo.CreateCreatorRequest
	(*CreateCreatorResponse)(nil),              // 20: photo.CreateCreatorResponse
	(*GetCreatorRequest)(nil),                  // 21: photo.GetCreatorRequest
	(*GetCreatorResponse)(nil),                 // 22: photo.GetCreatorResponse
	(*CheckoutItem)(nil),                       // 23: photo.CheckoutItem
	(*Total)(nil),                              // 24: photo.Total
	(*CalculatePhotoPriceRequest)(nil),         // 25: photo.CalculatePhotoPriceRequest
	(*CalculatePhotoPriceResponse)(nil),        // 26: photo.CalculatePhotoPriceResponse
	(*OwnerOwnPhotosRequest)(nil),              // 27: photo.OwnerOwnPhotosRequest
	(*OwnerOwnPhotosResponse)(nil),             // 28: photo.OwnerOwnPhotosResponse
	(*BulkPhoto)(nil),                          // 29: photo.BulkPhoto
	(*CreateBulkPhotoRequest)(nil),             // 30: photo.CreateBulkPhotoRequest
	(*CreateBulkPhotoResponse)(nil),            // 31: photo.CreateBulkPhotoResponse
	(*BulkUserSimilarPhoto)(nil),               // 32: photo.BulkUserSimilarPhoto
	(*CreateBulkUserSimilarPhotoRequest)(nil),  // 33: photo.CreateBulkUserSimilarPhotoRequest
	(*CreateBulkUserSimilarPhotoResponse)(nil), // 34: photo.CreateBulkUserSimilarPhotoResponse
	(*CountMap)(nil),                           // 35: photo.CountMap
	nil,                                        // 36: photo.CountMap.CountMapEntry
	(*timestamppb.Timestamp)(nil),              // 37: google.protobuf.Timestamp
	(*wrapperspb.DoubleValue)(nil),             // 38: google.protobuf.DoubleValue
	(*wrapperspb.StringValue)(nil),             // 39: google.protobuf.StringValue
}
var file_pb_photo_photo_proto_depIdxs = []int32{
	37, // 0: photo.Photo.original_at:type_name -> google.protobuf.Timestamp
	37, // 1: photo.Photo.created_at:type_name -> google.protobuf.Timestamp
	37, // 2: photo.Photo.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: photo.Photo.detail:type_name -> photo.PhotoDetail
	38, // 4: photo.Photo.latitude:type_name -> google.protobuf.DoubleValue
	38, // 5: photo.Photo.longitude:type_name -> google.protobuf.DoubleValue
	39, // 6: photo.Photo.description:type_name -> google.protobuf.StringValue
	39, // 7: photo.Photo.bulk_photo_id:type_name -> google.protobuf.StringValue
	37, // 8: photo.PhotoDetail.created_at:type_name -> google.protobuf.Timestamp
	37, // 9: photo.PhotoDetail.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 10: photo.CreatePhotoRequest.photo:type_name -> photo.Photo
	1,  // 11: photo.UpdatePhotoDetailRequest.photoDetail:type_name -> photo.PhotoDetail
	37, // 12: photo.UserSimilarPhoto.created_at:type_name -> google.protobuf.Timestamp
	37, // 13: photo.UserSimilarPhoto.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 14: photo.CreateUserSimilarPhotoRequest.photoDetail:type_name -> photo.PhotoDetail
	10, // 15: photo.CreateUserSimilarPhotoRequest.user_similar_photo:type_name -> photo.UserSimilarPhoto
	37, // 16: photo.Facecam.original_at:type_name -> google.protobuf.Timestamp
	37, // 17: photo.Facecam.created_at:type_name -> google.protobuf.Timestamp
	37, // 18: photo.Facecam.updated_at:type_name -> google.protobuf.Timestamp
	13, // 19: photo.CreateFacecamRequest.facecam:type_name -> photo.Facecam
	13, // 20: photo.CreateUserSimilarFacecamRequest.facecam:type_name -> photo.Facecam
	10, // 21: photo.CreateUserSimilarFacecamRequest.user_similar_photo:type_name -> photo.UserSimilarPhoto
	37, // 22: photo.Creator.verified_at:type_name -> google.protobuf.Timestamp
	37, // 23: photo.Creator.created_at:type_name -> google.protobuf.Timestamp
	37, // 24: photo.Creator.updated_at:type_name -> google.protobuf.Timestamp
	18, // 25: photo.CreateCreatorResponse.creator:type_name -> photo.Creator
	18, // 26: photo.GetCreatorResponse.creator:type_name -> photo.Creator
	23, // 27: photo.CalculatePhotoPriceResponse.items:type_name -> photo.CheckoutItem
	24, // 28: photo.CalculatePhotoPriceResponse.total:type_name -> photo.Total
	37, // 29: photo.BulkPhoto.created_at:type_name -> google.protobuf.Timestamp
	37, // 30: photo.BulkPhoto.updated_at:type_name -> google.protobuf.Timestamp
	29, // 31: photo.CreateBulkPhotoRequest.bulk_photo:type_name -> photo.BulkPhoto
	0,  // 32: photo.CreateBulkPhotoRequest.photos:type_name -> photo.Photo
	1,  // 33: photo.BulkUserSimilarPhoto.photoDetail:type_name -> photo.PhotoDetail
	10, // 34: photo.BulkUserSimilarPhoto.user_similar_photo:type_name -> photo.UserSimilarPhoto
	29, // 35: photo.CreateBulkUserSimilarPhotoRequest.bulk_photo:type_name -> photo.BulkPhoto
	32, // 36: photo.CreateBulkUserSimilarPhotoRequest.bulk_user_similar_photo:type_name -> photo.BulkUserSimilarPhoto
	36, // 37: photo.CountMap.count_map:type_name -> photo.CountMap.CountMapEntry
	6,  // 38: photo.PhotoService.UpdatePhotographerPhoto:input_type -> photo.UpdatePhotographerPhotoRequest
	8,  // 39: photo.PhotoService.UpdateFaceRecogPhoto:input_type -> photo.UpdateFaceRecogPhotoRequest
	2,  // 40: photo.PhotoService.CreatePhoto:input_type -> photo.CreatePhotoRequest
	16, // 41: photo.PhotoService.CreateUserSimilarFacecam:input_type -> photo.CreateUserSimilarFacecamRequest
	14, // 42: photo.PhotoService.CreateFacecam:input_type -> photo.CreateFacecamRequest
	4,  // 43: photo.PhotoService.UpdatePhotoDetail:input_type -> photo.UpdatePhotoDetailRequest
	11, // 44: photo.PhotoService.CreateUserSimilar:input_type -> photo.CreateUserSimilarPhotoRequest
	19, // 45: photo.PhotoService.CreateCreator:input_type -> photo.CreateCreatorRequest
	21, // 46: photo.PhotoService.GetCreator:input_type -> photo.GetCreatorRequest
	25, // 47: photo.PhotoService.CalculatePhotoPrice:input_type -> photo.CalculatePhotoPriceRequest
	27, // 48: photo.PhotoService.OwnerOwnPhotos:input_type -> photo.OwnerOwnPhotosRequest
	30, // 49: photo.PhotoService.CreateBulkPhoto:input_type -> photo.CreateBulkPhotoRequest
	33, // 50: photo.PhotoService.CreateBulkUserSimilarPhotos:input_type -> photo.CreateBulkUserSimilarPhotoRequest
	7,  // 51: photo.PhotoService.UpdatePhotographerPhoto:output_type -> photo.UpdatePhotographerPhotoResponse
	9,  // 52: photo.PhotoService.UpdateFaceRecogPhoto:output_type -> photo.UpdateFaceRecogPhotoResponse
	3,  // 53: photo.PhotoService.CreatePhoto:output_type -> photo.CreatePhotoResponse
	17, // 54: photo.PhotoService.CreateUserSimilarFacecam:output_type -> photo.CreateUserSimilarFacecamResponse
	15, // 55: photo.PhotoService.CreateFacecam:output_type -> photo.CreateFacecamResponse
	5,  // 56: photo.PhotoService.UpdatePhotoDetail:output_type -> photo.UpdatePhotoDetailResponse
	12, // 57: photo.PhotoService.CreateUserSimilar:output_type -> photo.CreateUserSimilarPhotoResponse
	20, // 58: photo.PhotoService.CreateCreator:output_type -> photo.CreateCreatorResponse
	22, // 59: photo.PhotoService.GetCreator:output_type -> photo.GetCreatorResponse
	26, // 60: photo.PhotoService.CalculatePhotoPrice:output_type -> photo.CalculatePhotoPriceResponse
	28, // 61: photo.PhotoService.OwnerOwnPhotos:output_type -> photo.OwnerOwnPhotosResponse
	31, // 62: photo.PhotoService.CreateBulkPhoto:output_type -> photo.CreateBulkPhotoResponse
	34, // 63: photo.PhotoService.CreateBulkUserSimilarPhotos:output_type -> photo.CreateBulkUserSimilarPhotoResponse
	51, // [51:64] is the sub-list for method output_type
	38, // [38:51] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_pb_photo_photo_proto_init() }
func file_pb_photo_photo_proto_init() {
	if File_pb_photo_photo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_photo_photo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotographerPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotographerPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFaceRecogPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFaceRecogPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSimilarPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Facecam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacecamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFacecamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarFacecamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserSimilarFacecamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Creator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCreatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCreatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePhotoPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePhotoPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerOwnPhotosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnerOwnPhotosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkUserSimilarPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkUserSimilarPhotoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBulkUserSimilarPhotoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_photo_photo_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_photo_photo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_photo_photo_proto_goTypes,
		DependencyIndexes: file_pb_photo_photo_proto_depIdxs,
		MessageInfos:      file_pb_photo_photo_proto_msgTypes,
	}.Build()
	File_pb_photo_photo_proto = out.File
	file_pb_photo_photo_proto_rawDesc = nil
	file_pb_photo_photo_proto_goTypes = nil
	file_pb_photo_photo_proto_depIdxs = nil
}
