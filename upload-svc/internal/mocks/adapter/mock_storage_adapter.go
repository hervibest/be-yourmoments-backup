// Code generated by MockGen. DO NOT EDIT.
// Source: ./adapter/storage_adapter.go

// Package mockadapter is a generated GoMock package.
package mockadapter

import (
	context "context"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/hervibest/be-yourmoments-backup/upload-svc/internal/model"
)

// MockStorageAdapter is a mock of StorageAdapter interface.
type MockStorageAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockStorageAdapterMockRecorder
}

// MockStorageAdapterMockRecorder is the mock recorder for MockStorageAdapter.
type MockStorageAdapterMockRecorder struct {
	mock *MockStorageAdapter
}

// NewMockStorageAdapter creates a new mock instance.
func NewMockStorageAdapter(ctrl *gomock.Controller) *MockStorageAdapter {
	mock := &MockStorageAdapter{ctrl: ctrl}
	mock.recorder = &MockStorageAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageAdapter) EXPECT() *MockStorageAdapterMockRecorder {
	return m.recorder
}

// DeleteFile mocks base method.
func (m *MockStorageAdapter) DeleteFile(ctx context.Context, fileName string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", ctx, fileName)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockStorageAdapterMockRecorder) DeleteFile(ctx, fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockStorageAdapter)(nil).DeleteFile), ctx, fileName)
}

// UploadFile mocks base method.
func (m *MockStorageAdapter) UploadFile(ctx context.Context, file *multipart.FileHeader, uploadFile multipart.File, path string) (*model.MinioFileResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", ctx, file, uploadFile, path)
	ret0, _ := ret[0].(*model.MinioFileResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockStorageAdapterMockRecorder) UploadFile(ctx, file, uploadFile, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockStorageAdapter)(nil).UploadFile), ctx, file, uploadFile, path)
}
