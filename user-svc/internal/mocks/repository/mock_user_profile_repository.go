// Code generated by MockGen. DO NOT EDIT.
// Source: ./repository/user_profile_repository.go

// Package mockrepository is a generated GoMock package.
package mockrepository

import (
	entity "be-yourmoments/user-svc/internal/entity"
	repository "be-yourmoments/user-svc/internal/repository"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserProfileRepository is a mock of UserProfileRepository interface.
type MockUserProfileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserProfileRepositoryMockRecorder
}

// MockUserProfileRepositoryMockRecorder is the mock recorder for MockUserProfileRepository.
type MockUserProfileRepositoryMockRecorder struct {
	mock *MockUserProfileRepository
}

// NewMockUserProfileRepository creates a new mock instance.
func NewMockUserProfileRepository(ctrl *gomock.Controller) *MockUserProfileRepository {
	mock := &MockUserProfileRepository{ctrl: ctrl}
	mock.recorder = &MockUserProfileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserProfileRepository) EXPECT() *MockUserProfileRepositoryMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockUserProfileRepository) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockUserProfileRepositoryMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockUserProfileRepository)(nil).Close))
}

// Create mocks base method.
func (m *MockUserProfileRepository) Create(ctx context.Context, tx repository.Querier, userProfile *entity.UserProfile) (*entity.UserProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, tx, userProfile)
	ret0, _ := ret[0].(*entity.UserProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUserProfileRepositoryMockRecorder) Create(ctx, tx, userProfile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserProfileRepository)(nil).Create), ctx, tx, userProfile)
}

// CreateWithProfileUrl mocks base method.
func (m *MockUserProfileRepository) CreateWithProfileUrl(ctx context.Context, tx repository.Querier, userProfile *entity.UserProfile) (*entity.UserProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWithProfileUrl", ctx, tx, userProfile)
	ret0, _ := ret[0].(*entity.UserProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWithProfileUrl indicates an expected call of CreateWithProfileUrl.
func (mr *MockUserProfileRepositoryMockRecorder) CreateWithProfileUrl(ctx, tx, userProfile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWithProfileUrl", reflect.TypeOf((*MockUserProfileRepository)(nil).CreateWithProfileUrl), ctx, tx, userProfile)
}
